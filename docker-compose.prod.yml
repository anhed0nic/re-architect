version: "3.8"

services:
  re-architect:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - NODE_ENV=production
    volumes:
      - binary_samples:/app/samples
      - results:/app/results
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GHIDRA_PATH=${GHIDRA_PATH:-/opt/ghidra}
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/api/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - NODE_ENV=production
    ports:
      - "5000:5000"
    volumes:
      - results:/app/results
    environment:
      - FLASK_APP=src/visualization/server.py
      - FLASK_ENV=production
      - LOG_LEVEL=info
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    depends_on:
      - re-architect
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - API_URL=/api
        - NODE_ENV=production
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend/nginx.prod.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  binary_samples:
    driver: local
  results:
    driver: local

networks:
  default:
    driver: bridge
    name: re-architect-network