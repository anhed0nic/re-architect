name: Frontend CI

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [main, master, develop]
    paths:
      - 'frontend/**'
  schedule:
    - cron: '0 0 * * 0'  # Run once a week on Sunday

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Lint
        working-directory: ./frontend
        run: npm run lint || echo "Linting failed but continuing build"

      - name: Type check
        working-directory: ./frontend
        run: npm run typecheck || echo "Type checking failed but continuing build"

      - name: Build
        working-directory: ./frontend
        run: npm run build
        env:
          CI: true

      - name: Test
        working-directory: ./frontend
        run: npm test -- --passWithNoTests --coverage
        env:
          CI: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./frontend/coverage
          flags: frontend
          fail_ci_if_error: false

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/build

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run npm audit
        working-directory: ./frontend
        run: npm audit --audit-level=high

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 're-architect-frontend'
          path: 'frontend'
          format: 'HTML'
          out: 'frontend/reports'
          args: >
            --failOnCVSS 8
            --enableExperimental

      - name: Upload security report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-report
          path: frontend/reports/

  e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/build

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install Playwright
        working-directory: ./frontend
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Setup mock server
        run: |
          pip install -r requirements.txt
          python src/visualization/run_mock_server.py &
          sleep 5

      - name: Serve frontend
        working-directory: ./frontend
        run: |
          npx serve -s build -l 3000 &
          sleep 5

      - name: Run Playwright tests
        working-directory: ./frontend
        run: npx playwright test
        continue-on-error: true  # Allow workflow to continue even if e2e tests fail for now

      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
